// MARK: GENERATED
// ------------------------------------------------
graph = JSON.parse(`
<%= json %>
`);
// ------------------------------------------------

const cy = cytoscape({
  container: $('#cy'),
  elements: ([...graph.nodes, ...graph.edges]).map(x => ({data: x})),
  style: [
    {
      selector: 'node',
      style: {
        'label': (e) => e.id().split("/")[1],
        'color': '#fff',
        'text-valign': 'center',
        'text-halign': 'center',
        'font-size': '14px',
        'shape': 'roundrectangle',
        'width': (e) => Math.max(50, e.id().split("/")[1].length * 8),
      }
    },
    {
      selector: 'edge',
      style: {
        'width': 1,
        'line-color': '#ccc',
        'target-arrow-color': '#ccc',
        'target-arrow-shape': 'triangle',
        'curve-style': 'bezier',
      }
    },
    {
      selector: 'node[cache="hit"]',
      style: {'background-color': 'green'}
    },
    {
      selector: 'node[cache="missed"]',
      style: {'background-color': '#ff6f00'}
    },
    {
      selector: 'node[type="agg"]',
      style: {
        'background-color': '#333',
      }
    },
    {
      selector: 'node[cache="ignored"]',
      style: {
        'background-color': '#888',
      }
    },
  ],
  layout: {
    name: 'fcose',
    directed: true,
  }
});
cy.on('click', 'node', function(event) {
  // Make node focused
  const node = event.target;
  cy.nodes().style({'border-width': 0, 'font-weight': 'normal'});
  node.style({'border-color': '#333', 'border-width': 3, 'font-weight': 'bold'});
  // Display node info on the sidebar
  $('.node-info').css('display', 'block');
  const info = $('.node-info .info');
  info.find('.target').html(node.id());
  info.find('.checksum').html(node.data('checksum') || 'NA');
  info.find('.binary')
    .html((node.data('binary') || 'NA').split('/').slice(-1))
    .attr({'href': node.data('binary') || ''});
});
